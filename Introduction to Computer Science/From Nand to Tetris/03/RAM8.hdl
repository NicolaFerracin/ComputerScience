// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	
	// Dmux only one out based on address
	DMux8Way(in=load ,sel=address ,a=in1 ,b=in2 ,c=in3 ,d=in4 ,e=in5 ,f=in6 ,g= in7,h=in8 ); 
	
	// in to all registers
	Register(in=in, load=in1, out=out1);
	Register(in=in, load=in2, out=out2);
	Register(in=in, load=in3, out=out3);
	Register(in=in, load=in4, out=out4);
	Register(in=in, load=in5, out=out5);
	Register(in=in, load=in6, out=out6);
	Register(in=in, load=in7, out=out7);
	Register(in=in, load=in8, out=out8);
	
	// Mux and Dmux to select only one register
	// Mux all outs
	Mux8Way16(a=out1 ,b=out2 ,c=out3 ,d=out4 ,e=out5 ,f=out6 ,g=out7 ,h=out8 ,sel=address ,out=out );
	
	
}